name: release

on:
  push:
    tags:
    - v*

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.version.outputs.version}}
      anchor: ${{steps.anchor.outputs.anchor}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup mise
      uses: jdx/mise-action@v2

    - name: Store version
      id: version
      run: echo "version=$(jq --raw-output ".version" package.json)" >> "$GITHUB_OUTPUT"

    - name: Store anchor
      id: anchor
      run: |
        v="${{steps.version.outputs.version}}"
        r="^## \[$v\] - [0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$"
        h=$(grep "$r" CHANGELOG.md 2>/dev/null)
        if [ -z "$h" ]; then exit 1; fi
        v="${v%.*.*}${v#*.}"
        v="${v%.*}${v##*.}"
        d="${h##* - }"
        a="${v}---${d}"
        echo "anchor=$a" >> "$GITHUB_OUTPUT"

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build main
      run: pnpm build-main

    - name: Build types
      run: pnpm build-types

    - name: Build package.json
      run: pnpm build-package-json

    - name: Archive package
      run: pnpm pack

    - name: Upload package
      uses: actions/upload-artifact@v4
      with:
        name: package
        path: "*.tgz"
        if-no-files-found: error

  npm:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    env:
      NODE_AUTH_TOKEN: ${{secrets.NPM_PUBLISH_TOKEN}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup mise
      uses: jdx/mise-action@v2

    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: package

    - name: Configure registry
      run: |
        pnpm config set //registry.npmjs.org/:_authToken "\${NODE_AUTH_TOKEN}"
        pnpm config set registry https://registry.npmjs.org

    - name: Publish package
      run: pnpm publish *.tgz --no-git-checks --provenance --access public

  gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
    env:
      NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup mise
      uses: jdx/mise-action@v2

    - name: Download package
      uses: actions/download-artifact@v4
      with:
        name: package

    - name: Configure registry
      run: |
        pnpm config set //npm.pkg.github.com/:_authToken "\${NODE_AUTH_TOKEN}"
        pnpm config set registry https://npm.pkg.github.com

    - name: Publish package
      run: pnpm publish *.tgz --no-git-checks --provenance --access public

  jsr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup mise
      uses: jdx/mise-action@v2

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build package.json
      run: pnpm build-package-json

    - name: Publish package
      run: deno publish --allow-dirty

  gr:
    needs: [npm, gpr, jsr]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: "*"
        merge-multiple: true

    - name: Create Release
      run: |
        v="${{needs.build.outputs.version}}"
        a="${{needs.build.outputs.anchor}}"
        u="${{github.server_url}}/${{github.repository}}/blob/main/CHANGELOG.md#$a"
        gh release create "v$v" --title "v$v" --notes "See $u"

    - name: Upload Package
      run: gh release upload "v${{needs.build.outputs.version}}" *.tgz
